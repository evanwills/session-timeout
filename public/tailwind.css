*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(4 45 123 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(4 45 123 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.14 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

html {
  font-family: Poppins, sans-serif;
  --tw-text-opacity: 1;
  color: rgb(27 24 30 / var(--tw-text-opacity));
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

p {
  margin-bottom: 1rem;
}

.text-heading-xl {
  font-size: 1.75rem;
  line-height: 2.25rem;
  letter-spacing: -0.02em;
  font-weight: 700;
}

@media (min-width: 768px) {
  .text-heading-xl {
    font-size: 2rem;
    line-height: 2.5rem;
    letter-spacing: -0.02em;
    font-weight: 700;
  }
}

.text-heading-xl,
    .text-heading-lg,
    .text-heading-md,
    .text-heading-sm {
  max-width: 42rem;
  --tw-text-opacity: 1;
  color: rgb(10 33 77 / var(--tw-text-opacity));
}

.text-body-xl,
    .text-body-lg,
    .text-body-md,
    .text-body-sm,
    .text-bold-xl,
    .text-bold-lg,
    .text-bold-md,
    .text-bold-sm {
  max-width: 42rem;
}

input::-moz-placeholder {
  --tw-text-opacity: 1;
  color: rgb(108 103 111 / var(--tw-text-opacity));
}

input::placeholder {
  --tw-text-opacity: 1;
  color: rgb(108 103 111 / var(--tw-text-opacity));
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.left-0 {
  left: 0px;
}

.right-0 {
  right: 0px;
}

.top-0 {
  top: 0px;
}

.top-full {
  top: 100%;
}

.z-10 {
  z-index: 10;
}

.z-20 {
  z-index: 20;
}

.order-3 {
  order: 3;
}

.m-0 {
  margin: 0px;
}

.m-auto {
  margin: auto;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-6 {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}

.-ms-3 {
  margin-inline-start: -0.75rem;
}

.mb-0 {
  margin-bottom: 0px;
}

.mb-10 {
  margin-bottom: 2.5rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-24 {
  margin-bottom: 6rem;
}

.mb-3 {
  margin-bottom: 0.75rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-5 {
  margin-bottom: 1.25rem;
}

.mb-8 {
  margin-bottom: 2rem;
}

.me-3 {
  margin-inline-end: 0.75rem;
}

.ml-6 {
  margin-left: 1.5rem;
}

.mr-2 {
  margin-right: 0.5rem;
}

.mr-8 {
  margin-right: 2rem;
}

.mr-auto {
  margin-right: auto;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mt-16 {
  margin-top: 4rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-6 {
  margin-top: 1.5rem;
}

.box-content {
  box-sizing: content-box;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.\!inline {
  display: inline !important;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.grid {
  display: grid;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.size-14 {
  width: 3.5rem;
  height: 3.5rem;
}

.h-14 {
  height: 3.5rem;
}

.h-16 {
  height: 4rem;
}

.h-20 {
  height: 5rem;
}

.h-8 {
  height: 2rem;
}

.h-\[3\.75rem\] {
  height: 3.75rem;
}

.h-screen {
  height: 100vh;
}

.min-h-10 {
  min-height: 2.5rem;
}

.min-h-14 {
  min-height: 3.5rem;
}

.w-14 {
  width: 3.5rem;
}

.w-20 {
  width: 5rem;
}

.w-8 {
  width: 2rem;
}

.w-full {
  width: 100%;
}

.min-w-\[288px\] {
  min-width: 288px;
}

.max-w-2xl {
  max-width: 42rem;
}

.max-w-\[22rem\] {
  max-width: 22rem;
}

.max-w-\[760px\] {
  max-width: 760px;
}

.max-w-md {
  max-width: 28rem;
}

.max-w-none {
  max-width: none;
}

.max-w-screen-2xl {
  max-width: 1536px;
}

.max-w-xl {
  max-width: 36rem;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-grow {
  flex-grow: 1;
}

.grow {
  flex-grow: 1;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.cursor-pointer {
  cursor: pointer;
}

.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

.flex-wrap {
  flex-wrap: wrap;
}

.content-center {
  align-content: center;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.\!justify-start {
  justify-content: flex-start !important;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-6 {
  gap: 1.5rem;
}

.gap-8 {
  gap: 2rem;
}

.gap-x-0\.5 {
  -moz-column-gap: 0.125rem;
       column-gap: 0.125rem;
}

.gap-x-1 {
  -moz-column-gap: 0.25rem;
       column-gap: 0.25rem;
}

.gap-x-2 {
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}

.gap-x-4 {
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

.gap-x-6 {
  -moz-column-gap: 1.5rem;
       column-gap: 1.5rem;
}

.gap-y-1 {
  row-gap: 0.25rem;
}

.gap-y-2 {
  row-gap: 0.5rem;
}

.gap-y-3 {
  row-gap: 0.75rem;
}

.gap-y-4 {
  row-gap: 1rem;
}

.gap-y-6 {
  row-gap: 1.5rem;
}

.gap-y-8 {
  row-gap: 2rem;
}

.self-center {
  align-self: center;
}

.overflow-hidden {
  overflow: hidden;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-r-lg {
  border-top-right-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
}

.border {
  border-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-l-4 {
  border-left-width: 4px;
}

.border-blue-500 {
  --tw-border-opacity: 1;
  border-color: rgb(4 45 123 / var(--tw-border-opacity));
}

.border-blue-700 {
  --tw-border-opacity: 1;
  border-color: rgb(10 44 107 / var(--tw-border-opacity));
}

.border-green-500 {
  --tw-border-opacity: 1;
  border-color: rgb(51 163 148 / var(--tw-border-opacity));
}

.border-green-700 {
  --tw-border-opacity: 1;
  border-color: rgb(8 92 82 / var(--tw-border-opacity));
}

.border-grey-100 {
  --tw-border-opacity: 1;
  border-color: rgb(240 240 240 / var(--tw-border-opacity));
}

.border-grey-200 {
  --tw-border-opacity: 1;
  border-color: rgb(226 223 229 / var(--tw-border-opacity));
}

.border-red-500 {
  --tw-border-opacity: 1;
  border-color: rgb(218 23 16 / var(--tw-border-opacity));
}

.border-sand-500 {
  --tw-border-opacity: 1;
  border-color: rgb(218 126 27 / var(--tw-border-opacity));
}

.border-purple-500 {
  --tw-border-opacity: 1;
  border-color: rgb(146 132 220 / var(--tw-border-opacity));
}

.border-b-grey-200 {
  --tw-border-opacity: 1;
  border-bottom-color: rgb(226 223 229 / var(--tw-border-opacity));
}

.bg-blue-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 246 255 / var(--tw-bg-opacity));
}

.bg-green-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(235 246 244 / var(--tw-bg-opacity));
}

.bg-grey-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(250 250 250 / var(--tw-bg-opacity));
}

.bg-red-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(246 235 235 / var(--tw-bg-opacity));
}

.bg-sand-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(251 242 232 / var(--tw-bg-opacity));
}

.bg-secondary-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(232 248 254 / var(--tw-bg-opacity));
}

.bg-sky-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(232 248 254 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-purple-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(242 240 255 / var(--tw-bg-opacity));
}

.object-contain {
  -o-object-fit: contain;
     object-fit: contain;
}

.p-0 {
  padding: 0px;
}

.p-12 {
  padding: 3rem;
}

.p-3 {
  padding: 0.75rem;
}

.p-6 {
  padding: 1.5rem;
}

.px-0 {
  padding-left: 0px;
  padding-right: 0px;
}

.px-10 {
  padding-left: 2.5rem;
  padding-right: 2.5rem;
}

.px-16 {
  padding-left: 4rem;
  padding-right: 4rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.\!pb-0 {
  padding-bottom: 0px !important;
}

.pb-2 {
  padding-bottom: 0.5rem;
}

.pb-3 {
  padding-bottom: 0.75rem;
}

.pb-4 {
  padding-bottom: 1rem;
}

.pb-6 {
  padding-bottom: 1.5rem;
}

.pe-1 {
  padding-inline-end: 0.25rem;
}

.pl-3 {
  padding-left: 0.75rem;
}

.pl-4 {
  padding-left: 1rem;
}

.pr-5 {
  padding-right: 1.25rem;
}

.pt-0\.5 {
  padding-top: 0.125rem;
}

.pt-12 {
  padding-top: 3rem;
}

.pt-2 {
  padding-top: 0.5rem;
}

.pt-3 {
  padding-top: 0.75rem;
}

.pt-4 {
  padding-top: 1rem;
}

.pt-8 {
  padding-top: 2rem;
}

.text-center {
  text-align: center;
}

.text-start {
  text-align: start;
}

.text-\[20px\] {
  font-size: 20px;
}

.text-body-md {
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
}

.text-body-sm {
  font-size: 0.75rem;
  line-height: 1rem;
  font-weight: 400;
}

.text-bold-md {
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 600;
}

.text-heading-lg {
  font-size: 1.5rem;
  line-height: 2rem;
  letter-spacing: -0.02em;
  font-weight: 700;
}

.text-heading-md {
  font-size: 1.125rem;
  line-height: 1.5rem;
  letter-spacing: -0.02em;
  font-weight: 600;
}

.text-heading-sm {
  font-size: 1rem;
  line-height: 1.25rem;
  font-weight: 600;
}

.font-bold {
  font-weight: 700;
}

.font-semibold {
  font-weight: 600;
}

.uppercase {
  text-transform: uppercase;
}

.capitalize {
  text-transform: capitalize;
}

.leading-4 {
  line-height: 1rem;
}

.leading-5 {
  line-height: 1.25rem;
}

.leading-\[1\.2rem\] {
  line-height: 1.2rem;
}

.leading-normal {
  line-height: 1.5;
}

.tracking-widest {
  letter-spacing: 0.1em;
}

.text-\[a-z\] {
  color: a-z;
}

.text-blue-500 {
  --tw-text-opacity: 1;
  color: rgb(4 45 123 / var(--tw-text-opacity));
}

.text-blue-900 {
  --tw-text-opacity: 1;
  color: rgb(10 33 77 / var(--tw-text-opacity));
}

.text-green-500 {
  --tw-text-opacity: 1;
  color: rgb(51 163 148 / var(--tw-text-opacity));
}

.text-green-600 {
  --tw-text-opacity: 1;
  color: rgb(22 163 74 / var(--tw-text-opacity));
}

.text-grey-600 {
  --tw-text-opacity: 1;
  color: rgb(108 103 111 / var(--tw-text-opacity));
}

.text-grey-900 {
  --tw-text-opacity: 1;
  color: rgb(27 24 30 / var(--tw-text-opacity));
}

.text-primary-500 {
  --tw-text-opacity: 1;
  color: rgb(4 45 123 / var(--tw-text-opacity));
}

.text-primary-900 {
  --tw-text-opacity: 1;
  color: rgb(10 33 77 / var(--tw-text-opacity));
}

.text-red-600 {
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity));
}

.text-red-900 {
  --tw-text-opacity: 1;
  color: rgb(107 12 9 / var(--tw-text-opacity));
}

.text-sand-700 {
  --tw-text-opacity: 1;
  color: rgb(107 60 9 / var(--tw-text-opacity));
}

.text-green-700 {
  --tw-text-opacity: 1;
  color: rgb(8 92 82 / var(--tw-text-opacity));
}

.text-red-700 {
  --tw-text-opacity: 1;
  color: rgb(155 16 11 / var(--tw-text-opacity));
}

.text-purple-700 {
  --tw-text-opacity: 1;
  color: rgb(81 67 156 / var(--tw-text-opacity));
}

.text-sky-500 {
  --tw-text-opacity: 1;
  color: rgb(178 233 252 / var(--tw-text-opacity));
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline-offset-0 {
  outline-offset: 0px;
}

.outline-primary-500 {
  outline-color: #042d7b;
}

.ring {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow-lg {
  --tw-drop-shadow: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-shadow {
  transition-property: box-shadow;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.prose :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-inline-start: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}

.prose :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-inline-start-width: 0.25rem;
  border-inline-start-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-inline-start: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.prose :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.prose :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  border-radius: 0.3125rem;
  padding-top: 0.1875em;
  padding-inline-end: 0.375em;
  padding-bottom: 0.1875em;
  padding-inline-start: 0.375em;
}

.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: "`";
}

.prose :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-inline-end: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-inline-start: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
  content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
  content: none;
}

.prose :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.prose :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  vertical-align: top;
}

.prose :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  text-align: start;
}

.prose :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5em;
  padding-inline-start: 1.625em;
}

.prose :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-inline-end: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-inline-start: 0.5714286em;
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}

.prose :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}

.prose-sm {
  font-size: 0.875rem;
  line-height: 1.7142857;
}

.prose-sm :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}

.prose-sm :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 1.2857143em;
  line-height: 1.5555556;
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.prose-sm :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-inline-start: 1.1111111em;
}

.prose-sm :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 2.1428571em;
  margin-top: 0;
  margin-bottom: 0.8em;
  line-height: 1.2;
}

.prose-sm :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 1.4285714em;
  margin-top: 1.6em;
  margin-bottom: 0.8em;
  line-height: 1.4;
}

.prose-sm :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 1.2857143em;
  margin-top: 1.5555556em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}

.prose-sm :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.4285714em;
  margin-bottom: 0.5714286em;
  line-height: 1.4285714;
}

.prose-sm :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-sm :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8571429em;
  border-radius: 0.3125rem;
  padding-top: 0.1428571em;
  padding-inline-end: 0.3571429em;
  padding-bottom: 0.1428571em;
  padding-inline-start: 0.3571429em;
}

.prose-sm :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8571429em;
}

.prose-sm :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.9em;
}

.prose-sm :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8888889em;
}

.prose-sm :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8571429em;
  line-height: 1.6666667;
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  border-radius: 0.25rem;
  padding-top: 0.6666667em;
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-inline-start: 1em;
}

.prose-sm :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-inline-start: 1.5714286em;
}

.prose-sm :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-inline-start: 1.5714286em;
}

.prose-sm :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.2857143em;
  margin-bottom: 0.2857143em;
}

.prose-sm :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.4285714em;
}

.prose-sm :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0.4285714em;
}

.prose-sm :where(.prose-sm > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm :where(.prose-sm > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.prose-sm > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(.prose-sm > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(.prose-sm > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}

.prose-sm :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.prose-sm :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0.2857143em;
  padding-inline-start: 1.5714286em;
}

.prose-sm :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 2.8571429em;
  margin-bottom: 2.8571429em;
}

.prose-sm :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8571429em;
  line-height: 1.5;
}

.prose-sm :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-inline-start: 1em;
}

.prose-sm :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}

.prose-sm :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}

.prose-sm :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-top: 0.6666667em;
  padding-inline-end: 1em;
  padding-bottom: 0.6666667em;
  padding-inline-start: 1em;
}

.prose-sm :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-start: 0;
}

.prose-sm :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  padding-inline-end: 0;
}

.prose-sm :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-sm :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  font-size: 0.8571429em;
  line-height: 1.3333333;
  margin-top: 0.6666667em;
}

.prose-sm :where(.prose-sm > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-top: 0;
}

.prose-sm :where(.prose-sm > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  margin-bottom: 0;
}

.tsf-focus:focus {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: #042d7b;
}

.btn-md {
  max-width: 42rem;
  box-sizing: border-box;
  display: flex;
  width: 100%;
  min-width: 172px;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  border-radius: 0.25rem;
  border-width: 1px;
  border-color: transparent;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 600;
}

.btn-md:disabled {
  cursor: not-allowed;
  border-style: none !important;
  --tw-bg-opacity: 1 !important;
  background-color: rgb(226 223 229 / var(--tw-bg-opacity)) !important;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .btn-md {
    width: auto;
    max-width: 288px;
  }
}

.btn-md {
  height: 2.5rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 0.875rem;
  font-weight: 600;
  line-height: 1rem !important;
}

.btn-lg {
  max-width: 42rem;
  box-sizing: border-box;
  display: flex;
  width: 100%;
  min-width: 172px;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  border-radius: 0.25rem;
  border-width: 1px;
  border-color: transparent;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 600;
}

.btn-lg:disabled {
  cursor: not-allowed;
  border-style: none !important;
  --tw-bg-opacity: 1 !important;
  background-color: rgb(226 223 229 / var(--tw-bg-opacity)) !important;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .btn-lg {
    width: auto;
    max-width: 288px;
  }
}

.btn-lg {
  height: 3rem;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
  font-size: 0.875rem;
  font-weight: 600;
  line-height: 1.25rem !important;
}

.btn-inline {
  max-width: 42rem;
  box-sizing: border-box;
  display: flex;
  width: 100%;
  min-width: 172px;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  border-radius: 0.25rem;
  border-width: 1px;
  border-color: transparent;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 600;
}

.btn-inline:disabled {
  cursor: not-allowed;
  border-style: none !important;
  --tw-bg-opacity: 1 !important;
  background-color: rgb(226 223 229 / var(--tw-bg-opacity)) !important;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .btn-inline {
    width: auto;
    max-width: 288px;
  }
}

.btn-inline {
  display: inline-flex !important;
  height: 1.25rem;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 600;
}

.btn-icon-right {
  justify-content: flex-start;
}

.btn-icon-right::after  {
  max-width: 42rem;
  display: flex;
  max-height: 1.25rem;
  align-items: center;
  padding-left: 0.25rem;
  vertical-align: middle;
  font-family: Material Symbols Rounded;
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 400;
  content: var(--tw-content) !important;
  line-height: 14px !important;
}

.btn-pri:focus,
    .btn-generic:focus {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: #042d7b;
}

.btn-pri,
    .btn-generic {
  --tw-bg-opacity: 1;
  background-color: rgb(4 45 123 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-pri:hover,
    .btn-generic:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(10 44 107 / var(--tw-bg-opacity));
}

.btn-pri:focus,
    .btn-generic:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(10 44 107 / var(--tw-bg-opacity));
}

.btn-pri:active,
    .btn-generic:active {
  --tw-bg-opacity: 1;
  background-color: rgb(10 44 107 / var(--tw-bg-opacity));
}

.btn-sec:focus,
    .btn-generic-sec:focus {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: #042d7b;
}

.btn-sec,
    .btn-generic-sec {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(4 45 123 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(4 45 123 / var(--tw-text-opacity));
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-sec:hover,
    .btn-generic-sec:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(217 245 255 / var(--tw-bg-opacity));
}

.btn-sec:focus,
    .btn-generic-sec:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(217 245 255 / var(--tw-bg-opacity));
}

.btn-sec:active,
    .btn-generic-sec:active {
  --tw-bg-opacity: 1;
  background-color: rgb(232 248 254 / var(--tw-bg-opacity));
}

.btn-ter:focus,
    .btn-tertiary:focus {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: #042d7b;
}

.btn-ter,
    .btn-tertiary {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(4 45 123 / var(--tw-text-opacity));
}

.btn-ter:hover,
    .btn-tertiary:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(217 245 255 / var(--tw-bg-opacity));
}

.btn-ter:focus,
    .btn-tertiary:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(217 245 255 / var(--tw-bg-opacity));
}

.btn-ter:active,
    .btn-tertiary:active {
  --tw-bg-opacity: 1;
  background-color: rgb(232 248 254 / var(--tw-bg-opacity));
}

.btn-ter-east-rt {
  --tw-content: 'east';
  justify-content: flex-start;
}

.btn-ter-east-rt::after  {
  max-width: 42rem;
  display: flex;
  max-height: 1.25rem;
  align-items: center;
  padding-left: 0.25rem;
  vertical-align: middle;
  font-family: Material Symbols Rounded;
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 400;
  content: var(--tw-content) !important;
  line-height: 14px !important;
}

.btn-ter-east-rt:focus {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: #042d7b;
}

.btn-ter-east-rt {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(4 45 123 / var(--tw-text-opacity));
}

.btn-ter-east-rt:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(217 245 255 / var(--tw-bg-opacity));
}

.btn-ter-east-rt:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(217 245 255 / var(--tw-bg-opacity));
}

.btn-ter-east-rt:active {
  --tw-bg-opacity: 1;
  background-color: rgb(232 248 254 / var(--tw-bg-opacity));
}

.btn-ter-east-rt {
  justify-content: flex-start !important;
}

.btn-ter-east-rt::after {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  --tw-content: 'east';
  content: var(--tw-content);
}

.btn-ter-east-rt:hover::after {
  content: var(--tw-content);
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.btn-west-rt {
  max-width: 42rem;
  box-sizing: border-box;
  display: flex;
  width: 100%;
  min-width: 172px;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  border-radius: 0.25rem;
  border-width: 1px;
  border-color: transparent;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 600;
}

.btn-west-rt:disabled {
  cursor: not-allowed;
  border-style: none !important;
  --tw-bg-opacity: 1 !important;
  background-color: rgb(226 223 229 / var(--tw-bg-opacity)) !important;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .btn-west-rt {
    width: auto;
    max-width: 288px;
  }
}

.btn-west-rt {
  justify-content: flex-start;
}

.btn-west-rt::before  {
  max-width: 42rem;
  display: flex;
  max-height: 1.25rem;
  align-items: center;
  padding-right: 0.25rem;
  vertical-align: middle;
  font-family: Material Symbols Rounded;
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 400;
  content: var(--tw-content) !important;
  line-height: 14px !important;
}

.btn-west-rt:hover:before {
  transform: translateX(-0.25rem);
}

.btn-west-rt::before {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  --tw-content: 'west';
  content: var(--tw-content);
}

.btn-ter-west-rt {
  max-width: 42rem;
  box-sizing: border-box;
  display: flex;
  width: 100%;
  min-width: 172px;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  border-radius: 0.25rem;
  border-width: 1px;
  border-color: transparent;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 600;
}

.btn-ter-west-rt:disabled {
  cursor: not-allowed;
  border-style: none !important;
  --tw-bg-opacity: 1 !important;
  background-color: rgb(226 223 229 / var(--tw-bg-opacity)) !important;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .btn-ter-west-rt {
    width: auto;
    max-width: 288px;
  }
}

.btn-ter-west-rt {
  justify-content: flex-start;
}

.btn-ter-west-rt::before  {
  max-width: 42rem;
  display: flex;
  max-height: 1.25rem;
  align-items: center;
  padding-right: 0.25rem;
  vertical-align: middle;
  font-family: Material Symbols Rounded;
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 400;
  content: var(--tw-content) !important;
  line-height: 14px !important;
}

.btn-ter-west-rt:focus {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: #042d7b;
}

.btn-ter-west-rt {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(4 45 123 / var(--tw-text-opacity));
}

.btn-ter-west-rt:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(217 245 255 / var(--tw-bg-opacity));
}

.btn-ter-west-rt:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(217 245 255 / var(--tw-bg-opacity));
}

.btn-ter-west-rt:active {
  --tw-bg-opacity: 1;
  background-color: rgb(232 248 254 / var(--tw-bg-opacity));
}

.btn-ter-west-rt:hover:before {
  transform: translateX(-0.25rem);
}

.btn-ter-west-rt {
  justify-content: flex-start !important;
}

.btn-ter-west-rt::before {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  --tw-content: 'west';
  content: var(--tw-content);
}

.btn-ter-west-rt-inline {
  display: inline-flex;
}

.btn-sec-west-rt {
  max-width: 42rem;
  box-sizing: border-box;
  display: flex;
  width: 100%;
  min-width: 172px;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  border-radius: 0.25rem;
  border-width: 1px;
  border-color: transparent;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 600;
}

.btn-sec-west-rt:disabled {
  cursor: not-allowed;
  border-style: none !important;
  --tw-bg-opacity: 1 !important;
  background-color: rgb(226 223 229 / var(--tw-bg-opacity)) !important;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  .btn-sec-west-rt {
    width: auto;
    max-width: 288px;
  }
}

.btn-sec-west-rt {
  justify-content: flex-start;
}

.btn-sec-west-rt::before  {
  max-width: 42rem;
  display: flex;
  max-height: 1.25rem;
  align-items: center;
  padding-right: 0.25rem;
  vertical-align: middle;
  font-family: Material Symbols Rounded;
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 400;
  content: var(--tw-content) !important;
  line-height: 14px !important;
}

.btn-sec-west-rt:focus {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: #042d7b;
}

.btn-sec-west-rt {
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(4 45 123 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(4 45 123 / var(--tw-text-opacity));
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.btn-sec-west-rt:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(217 245 255 / var(--tw-bg-opacity));
}

.btn-sec-west-rt:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(217 245 255 / var(--tw-bg-opacity));
}

.btn-sec-west-rt:active {
  --tw-bg-opacity: 1;
  background-color: rgb(232 248 254 / var(--tw-bg-opacity));
}

.btn-sec-west-rt:hover:before {
  transform: translateX(-0.25rem);
}

.btn-sec-west-rt {
  justify-content: flex-start !important;
  border-width: 2px;
}

.btn-sec-west-rt::before {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  --tw-content: 'west';
  content: var(--tw-content);
}

.btn-forbidden {
  cursor: not-allowed !important;
}

.btn-link {
  padding-left: 0px;
  padding-right: 0px;
}

.tsf-module {
  margin-left: auto;
  margin-right: auto;
  max-width: 80rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

@media (min-width: 640px) {
  .tsf-module {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media (min-width: 1024px) {
  .tsf-module {
    padding-left: 4rem;
    padding-right: 4rem;
  }
}

.tsf-module {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

@media (min-width: 1024px) {
  .tsf-module {
    padding-top: 3rem;
    padding-bottom: 3rem;
  }
}

.tsf-grid {
  display: grid;
  grid-template-columns: repeat(4, minmax(0, 1fr));
  row-gap: 1.5rem;
}

@media (min-width: 640px) {
  .tsf-grid {
    grid-template-columns: repeat(8, minmax(0, 1fr));
    -moz-column-gap: 1rem;
         column-gap: 1rem;
  }
}

@media (min-width: 1024px) {
  .tsf-grid {
    grid-template-columns: repeat(12, minmax(0, 1fr));
    -moz-column-gap: 1.5rem;
         column-gap: 1.5rem;
  }
}

.tsf-grid-half {
  grid-column: span 4 / span 4;
}

@media (min-width: 640px) {
  .tsf-grid-half {
    grid-column: span 4 / span 4;
  }
}

@media (min-width: 1024px) {
  .tsf-grid-half {
    grid-column: span 6 / span 6;
  }
}

.msf-flex {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  -moz-column-gap: 1rem;
       column-gap: 1rem;
  row-gap: 2rem;
}

@media (min-width: 768px) {
  .msf-flex {
    flex-direction: row;
  }
}

@media (min-width: 1024px) {
  .msf-flex {
    -moz-column-gap: 1.5rem;
         column-gap: 1.5rem;
  }
}

.msf-flex-row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 1rem;
}

@media (min-width: 1024px) {
  .msf-flex-row {
    gap: 1.5rem;
  }
}

.msf-flex-full {
  width: 100%;
  max-width: 100%;
  flex-grow: 1;
}

.msf-flex-1-2 {
  width: 100%;
  max-width: 100%;
  flex-grow: 1;
}

@media (min-width: 768px) {
  .msf-flex-1-2 {
    width: calc((100% - 1rem) / 2);
    flex-grow: 0;
  }
}

@media (min-width: 1024px) {
  .msf-flex-1-2 {
    width: calc((100% - 1.5rem) / 2);
  }
}

.msf-flex-1-3 {
  width: 100%;
  max-width: 100%;
  flex-grow: 1;
}

@media (min-width: 768px) {
  .msf-flex-1-3 {
    width: calc((100% - 1rem) / 2);
    flex-grow: 0;
  }
}

@media (min-width: 1024px) {
  .msf-flex-1-3 {
    width: calc((100% - 3rem) / 3);
  }
}

.msf-flex-1-4 {
  width: 100%;
  max-width: 100%;
  flex-grow: 1;
}

@media (min-width: 768px) {
  .msf-flex-1-4 {
    width: calc((100% - 1rem) / 2);
    flex-grow: 0;
  }
}

@media (min-width: 1024px) {
  .msf-flex-1-4 {
    width: calc((100% - 3rem) / 3);
  }
}

@media (min-width: 1280px) {
  .msf-flex-1-4 {
    width: calc((100% - 4.5rem) / 4);
  }
}

.tsf-checkbox-input:focus {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
  outline-color: #042d7b;
}

.tsf-checkbox-input {
  position: relative;
  box-sizing: border-box;
  width: 1rem;
  height: 1rem;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: 0.25rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(196 191 198 / var(--tw-border-opacity));
}

.tsf-checkbox-input:checked {
  --tw-bg-opacity: 1;
  background-color: rgb(10 44 107 / var(--tw-bg-opacity));
}

.tsf-checkbox-input:invalid {
  --tw-border-opacity: 1;
  border-color: rgb(218 23 16 / var(--tw-border-opacity));
}

.tsf-checkbox-input:hover {
  --tw-shadow: 0 0 0 0.25rem #D9F5FF;
  --tw-shadow-colored: 0 0 0 0.25rem var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.tsf-checkbox-input:checked::after {
  position: absolute;
  left: 0.315rem;
  top: 50%;
  display: inline-block;
  height: 0.6rem;
  width: 0.3rem;
  border-bottom-width: 0.15rem;
  border-right-width: 0.15rem;
  border-style: solid;
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
  content: '';
  transform: translateY(-60%) rotate(45deg);
}

.msf-full-bleed {
  position: relative;
}

.msf-full-bleed::before {
  position: absolute;
  left: -100rem;
  top: 0px;
  bottom: 0px;
  width: 100rem;
  background-color: inherit;
  --tw-content: '';
  content: var(--tw-content);
}

.msf-full-bleed::after {
  position: absolute;
  right: -100rem;
  top: 0px;
  bottom: 0px;
  width: 100rem;
  background-color: inherit;
  --tw-content: '';
  content: var(--tw-content);
}

/**
   * This class is here because, for some unknown reason, Tailwind is
   * forcing the `::after` content to always be an empty string.
   */

.link-button::after,
  .image-tile__more::after {
  content: 'east' !important;
}

/**
   * This class is here because tailwind does not do nested selectors
   * and I need a nested selector because the link the hover is on is
   * an ancestor of the element being translated.
   */

.image-tile:hover .image-tile__more::after {
  transform: translateX(0.25rem) !important;
}

.scfForm {
  margin-left: auto;
  margin-right: auto;
  box-sizing: border-box;
  max-width: 80rem;
  padding-top: 3rem;
  padding-bottom: 3rem;
  padding-left: 4rem;
  padding-right: 4rem;
}

.form-group {
  margin-bottom: 1.5rem;
  max-width: 36rem;
}

.control-label {
  max-width: 42rem;
  margin-bottom: 0.5rem;
  display: block;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 600;
}

input.form-control {
  display: block;
  width: 100%;
  border-radius: 0.375rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(196 191 198 / var(--tw-border-opacity));
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  --tw-text-opacity: 1;
  color: rgb(27 24 30 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  input.form-control {
    line-height: 1.5rem;
  }
}

select.form-control {
  margin-top: 0.5rem;
  display: block;
  width: 100%;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: 0.375rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(196 191 198 / var(--tw-border-opacity));
  background-image: url(../assets/bg_faux-select-btn.png);
  background-position: right;
  background-repeat: no-repeat;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  padding-left: 0.5rem;
  padding-right: 0.75rem;
  --tw-text-opacity: 1;
  color: rgb(27 24 30 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  select.form-control {
    line-height: 1.5rem;
  }
}

input[type=file].form-control {
  margin-top: 0.5rem;
  display: block;
  width: 100%;
  border-width: 0px;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-left: 0px;
  --tw-text-opacity: 1;
  color: rgb(27 24 30 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  input[type=file].form-control {
    line-height: 1.5rem;
  }
}

.form-group.radio-button-list {
  margin-top: 0.5rem;
  margin-bottom: 1.5rem;
  display: flex;
  flex-direction: column;
}

.form-group.checkbox-list {
  margin-top: 0.5rem;
  margin-bottom: 1.5rem;
  display: flex;
  flex-direction: column;
}

.before\:text-heading-md::before {
  content: var(--tw-content);
  max-width: 42rem;
  --tw-text-opacity: 1;
  color: rgb(10 33 77 / var(--tw-text-opacity));
}

.after\:text-heading-lg::after {
  content: var(--tw-content);
  max-width: 42rem;
  --tw-text-opacity: 1;
  color: rgb(10 33 77 / var(--tw-text-opacity));
}

.after\:text-body-lg::after  {
  content: var(--tw-content);
  max-width: 42rem;
}

.prose-a\:text-link :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  --tw-text-opacity: 1;
  color: rgb(0 77 219 / var(--tw-text-opacity));
  text-decoration-line: underline;
  text-decoration-style: dashed;
  text-decoration-thickness: 1px;
  text-underline-offset: 4px;
}

.prose-a\:text-link :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))):visited {
  color: rgb(81 67 156 );
}

.prose-a\:text-link :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))):hover {
  --tw-text-opacity: 1;
  color: rgb(4 62 169 / var(--tw-text-opacity));
  text-decoration-style: solid;
}

.\*\:p-2\.5 > * {
  padding: 0.625rem;
}

.\*\:text-blue-500 > * {
  --tw-text-opacity: 1;
  color: rgb(4 45 123 / var(--tw-text-opacity));
}

.\*\:text-green-500 > * {
  --tw-text-opacity: 1;
  color: rgb(51 163 148 / var(--tw-text-opacity));
}

.\*\:text-green-600 > * {
  --tw-text-opacity: 1;
  color: rgb(22 163 74 / var(--tw-text-opacity));
}

.\*\:text-red-500 > * {
  --tw-text-opacity: 1;
  color: rgb(218 23 16 / var(--tw-text-opacity));
}

.\*\:text-sand-700 > * {
  --tw-text-opacity: 1;
  color: rgb(107 60 9 / var(--tw-text-opacity));
}

.\*\:text-green-700 > * {
  --tw-text-opacity: 1;
  color: rgb(8 92 82 / var(--tw-text-opacity));
}

.\*\:text-red-700 > * {
  --tw-text-opacity: 1;
  color: rgb(155 16 11 / var(--tw-text-opacity));
}

.\*\:text-purple-700 > * {
  --tw-text-opacity: 1;
  color: rgb(81 67 156 / var(--tw-text-opacity));
}

.\*\:text-sky-500 > * {
  --tw-text-opacity: 1;
  color: rgb(178 233 252 / var(--tw-text-opacity));
}

.before\:pr-2::before {
  content: var(--tw-content);
  padding-right: 0.5rem;
}

.before\:align-text-bottom::before {
  content: var(--tw-content);
  vertical-align: text-bottom;
}

.before\:font-symbol::before {
  content: var(--tw-content);
  font-family: Material Symbols Rounded;
}

.before\:text-heading-md::before {
  content: var(--tw-content);
  font-size: 1.125rem;
  line-height: 1.5rem;
  letter-spacing: -0.02em;
  font-weight: 600;
}

.before\:font-normal::before {
  content: var(--tw-content);
  font-weight: 400;
}

.before\:content-\[\'call\'\]::before {
  --tw-content: 'call';
  content: var(--tw-content);
}

.before\:content-\[\'credit\\_card\'\]::before {
  --tw-content: 'credit_card';
  content: var(--tw-content);
}

.before\:content-\[\'find\\_in\\_page\'\]::before {
  --tw-content: 'find_in_page';
  content: var(--tw-content);
}

.before\:content-\[\'house\'\]::before {
  --tw-content: 'house';
  content: var(--tw-content);
}

.before\:content-\[\'logout\'\]::before {
  --tw-content: 'logout';
  content: var(--tw-content);
}

.before\:content-\[\'sell\'\]::before {
  --tw-content: 'sell';
  content: var(--tw-content);
}

.after\:absolute::after {
  content: var(--tw-content);
  position: absolute;
}

.after\:float-right::after {
  content: var(--tw-content);
  float: right;
}

.after\:flex::after {
  content: var(--tw-content);
  display: flex;
}

.after\:max-h-5::after {
  content: var(--tw-content);
  max-height: 1.25rem;
}

.after\:items-center::after {
  content: var(--tw-content);
  align-items: center;
}

.after\:\!py-0::after {
  content: var(--tw-content);
  padding-top: 0px !important;
  padding-bottom: 0px !important;
}

.after\:pl-1::after {
  content: var(--tw-content);
  padding-left: 0.25rem;
}

.after\:pl-2::after {
  content: var(--tw-content);
  padding-left: 0.5rem;
}

.after\:align-middle::after {
  content: var(--tw-content);
  vertical-align: middle;
}

.after\:font-symbol::after {
  content: var(--tw-content);
  font-family: Material Symbols Rounded;
}

.after\:text-body-lg::after {
  content: var(--tw-content);
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 400;
}

.after\:text-heading-lg::after {
  content: var(--tw-content);
  font-size: 1.5rem;
  line-height: 2rem;
  letter-spacing: -0.02em;
  font-weight: 700;
}

.after\:font-normal::after {
  content: var(--tw-content);
  font-weight: 400;
}

.after\:\!leading-\[14px\]::after {
  content: var(--tw-content);
  line-height: 14px !important;
}

.after\:leading-4::after {
  content: var(--tw-content);
  line-height: 1rem;
}

.after\:transition::after {
  content: var(--tw-content);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.after\:content-\[\'expand\\_more\'\]::after {
  --tw-content: 'expand_more';
  content: var(--tw-content);
}

.after\:content-\[\\\'east\\\'\]::after {
  --tw-content: \'east\';
  content: var(--tw-content);
}

.hover\:bg-secondary-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(217 245 255 / var(--tw-bg-opacity));
}

.hover\:shadow-md:hover {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:after\:translate-x-1:hover::after {
  content: var(--tw-content);
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.focus\:bg-secondary-100:focus {
  --tw-bg-opacity: 1;
  background-color: rgb(217 245 255 / var(--tw-bg-opacity));
}

.focus\:shadow-md:focus {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.focus\:outline-primary-900:focus {
  outline-color: #0A214D;
}

.focus\:ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-primary-500:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(4 45 123 / var(--tw-ring-opacity));
}

.focus\:ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}

.group:hover .group-hover\:after\:translate-x-1::after {
  content: var(--tw-content);
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group.active .group-\[\.active\]\:block {
  display: block;
}

.group.active .group-\[\.active\]\:bg-primary-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(10 33 77 / var(--tw-bg-opacity));
}

.group.active .group-\[\.active\]\:text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.group.active .group-\[\.active\]\:after\:content-\[\'expand\\_less\'\]::after {
  --tw-content: 'expand_less';
  content: var(--tw-content);
}

.group.active .group-\[\.active\]\:focus\:outline-white:focus {
  outline-color: #fff;
}

.prose-p\:mb-0 :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  margin-bottom: 0px;
}

.prose-p\:mt-0 :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  margin-top: 0px;
}

.prose-p\:mt-2 :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  margin-top: 0.5rem;
}

.prose-ol\:mb-4 :is(:where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  margin-bottom: 1rem;
}

.prose-ol\:ml-0 :is(:where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  margin-left: 0px;
}

.prose-ol\:mt-0 :is(:where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  margin-top: 0px;
}

.prose-ol\:p-0 :is(:where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  padding: 0px;
}

.prose-ul\:mb-4 :is(:where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  margin-bottom: 1rem;
}

.prose-ul\:ml-0 :is(:where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  margin-left: 0px;
}

.prose-ul\:mt-0 :is(:where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  margin-top: 0px;
}

.prose-ul\:p-0 :is(:where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  padding: 0px;
}

.prose-li\:my-0 :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  margin-top: 0px;
  margin-bottom: 0px;
}

.prose-li\:ml-4 :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  margin-left: 1rem;
}

.prose-li\:pl-1 :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
  padding-left: 0.25rem;
}

@media (min-width: 640px) {
  .sm\:order-2 {
    order: 2;
  }

  .sm\:mb-8 {
    margin-bottom: 2rem;
  }

  .sm\:mt-0 {
    margin-top: 0px;
  }

  .sm\:block {
    display: block;
  }

  .sm\:flex-row {
    flex-direction: row;
  }
}

@media (min-width: 768px) {
  .md\:block {
    display: block;
  }

  .md\:inline {
    display: inline;
  }

  .md\:max-w-\[23rem\] {
    max-width: 23rem;
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:flex-col {
    flex-direction: column;
  }

  .md\:gap-y-12 {
    row-gap: 3rem;
  }

  .md\:px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .md\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .md\:py-3 {
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
  }

  .md\:drop-shadow-lg {
    --tw-drop-shadow: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1));
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }
}

@media (min-width: 1024px) {
  .lg\:mb-12 {
    margin-bottom: 3rem;
  }

  .lg\:w-\[auto\] {
    width: auto;
  }

  .lg\:max-w-xs {
    max-width: 20rem;
  }

  .lg\:flex-row {
    flex-direction: row;
  }

  .lg\:justify-end {
    justify-content: flex-end;
  }

  .lg\:gap-4 {
    gap: 1rem;
  }

  .lg\:gap-y-12 {
    row-gap: 3rem;
  }

  .lg\:px-16 {
    padding-left: 4rem;
    padding-right: 4rem;
  }

  .lg\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .lg\:py-3 {
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
  }
}

@media (min-width: 1280px) {
  .xl\:gap-12 {
    gap: 3rem;
  }

  .xl\:p-12 {
    padding: 3rem;
  }

  .xl\:px-12 {
    padding-left: 3rem;
    padding-right: 3rem;
  }
}
